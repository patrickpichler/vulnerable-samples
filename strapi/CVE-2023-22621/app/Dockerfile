FROM --platform=$BUILDPLATFORM node:18-alpine3.18 AS build

RUN apk update && apk add --no-cache build-base gcc \
  autoconf automake zlib-dev libpng-dev vips-dev git > /dev/null 2>&1
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
ENV STRAPI_TELEMETRY_DISABLED=true

WORKDIR /opt/
COPY package.json package-lock.json ./

ARG TARGETARCH

RUN ARCH=$(echo "${TARGETARCH}" | sed -e 's/amd64/x86/'); \
     npm install -g node-gyp --cpu=$ARCH --platform=linuxmusl && \
     npm config set fetch-retry-maxtimeout 600000 -g && \
     npm install --only=production --cpu=$ARCH --platform=linuxmusl

ENV PATH=/opt/node_modules/.bin:$PATH

WORKDIR /opt/app
COPY . .
RUN npm run build

# Creating final production image
FROM node:18-alpine3.18
RUN apk add --no-cache vips-dev
ARG NODE_ENV=production
ENV NODE_ENV=${NODE_ENV}
ENV STRAPI_TELEMETRY_DISABLED=true

# This is a dummy app, those values are fine
ENV APP_KEYS="toBeModified1,toBeModified2"
ENV API_TOKEN_SALT=tobemodified
ENV ADMIN_JWT_SECRET=tobemodified
ENV JWT_SECRET=tobemodified

WORKDIR /opt/
COPY --from=build /opt/node_modules ./node_modules

WORKDIR /opt/app
COPY --from=build /opt/app ./
ENV PATH=/opt/node_modules/.bin:$PATH

RUN chown -R node:node /opt/app
USER node
EXPOSE 1337
CMD ["npm", "run", "start"]
